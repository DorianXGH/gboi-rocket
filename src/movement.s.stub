.DEFINE ISAACHITBOX 1

move_stub:
; //////// MOVE ISAAC  Y \\\\\\\
	ld a,(global_.isaac.speed)
	and %00001111
	bit $3,a
	jp z,@dy_pos
	or %11110000
@dy_pos:
	ld hl,global_.isaac.y
	add (hl)
	ld (hl),a
; \\\\\\\ MOVE ISAAC  Y ////////

ld b,0
; //////// Collision \\\\\\\
	ld a, (global_.isaac.x)
	ld (collision_.p.1.x), a
	ld a, (global_.isaac.y)
	ld (collision_.p.1.y), a
	ld a, ISAACHITBOX
	ld (collision_.hitbox1), a

	; /// loop start \\\
	ld hl, global_.elements
	ld c, n_elements
@@loop:
	; /// loop start \\\

	; /// set position as parameter \\\
	ldi a, (hl)
	ld (collision_.p.2.x), a
	ldi a, (hl)
	ld (collision_.p.2.y), a
	; \\\ set position as parameter ///
	
	; /// set hitbox as parameter \\\
	inc hl
	ld a, (hl)
	ld de, global_.sheets
	ld e,a
	ld a, (de)	; a = (*element.sheet).size)
	and %00000111
	ld (collision_.hitbox2), a
	; \\\ set hitbox as parameter ///

	; /// test collision \\\
	ld d, h
	ld e, l
	call collision
	ld h, d
	ld l, e
	and a
	jr z, @@noCollision
	set $6,b
	; \\\ test collision ///
@@noCollision:

	; /// loop end \\\
	ld de, $0004
	add hl, de
	dec c
	jr nz, @@loop
	; \\\ loop end ///
; \\\\\\\ Collision ////////

; //////// MOVE ISAAC  X \\\\\\\
	ld a,(global_.isaac.speed)
	and %11110000
	swap a
	and %00001111
	bit $3,a
	jp z,@dx_pos
	or %11110000
@dx_pos:
	ld hl,global_.isaac.x
	add (hl)
	ld (hl),a
; \\\\\\\ MOVE ISAAC  X ////////

; //////// Collision \\\\\\\
	ld a, (global_.isaac.x)
	ld (collision_.p.1.x), a
	ld a, (global_.isaac.y)
	ld (collision_.p.1.y), a
	ld a, ISAACHITBOX
	ld (collision_.hitbox1), a

	; /// loop start \\\
	ld hl, global_.elements
	ld c, n_elements
@@loop:
	; /// loop start \\\

	; /// set position as parameter \\\
	ldi a, (hl)
	ld (collision_.p.2.x), a
	ldi a, (hl)
	ld (collision_.p.2.y), a
	; \\\ set position as parameter ///
	
	; /// set hitbox as parameter \\\
	inc hl
	ld a, (hl)
	ld de, global_.sheets
	ld e,a
	ld a, (de)	; a = (*element.sheet).size)
	and %00000111
	ld (collision_.hitbox2), a
	; \\\ set hitbox as parameter ///

	; /// test collision \\\
	ld d, h
	ld e, l
	call collision
	ld h, d
	ld l, e
	and a
	jr z, @@noCollision
	set $7,b
	; \\\ test collision ///
@@noCollision:

	; /// loop end \\\
	ld de, $0004
	add hl, de
	dec c
	jr nz, @@loop
	; \\\ loop end ///
; \\\\\\\ Collision ////////

@collision_solver:
; //////// call collision solver \\\\\\\
	ld a,b
	and a
	jp z,@@dont_call
	ld hl,global_.sheets
	ld a,(global_.elements.1.sheet)
	ld l,a
	call collisionSolverIsaac
@@dont_call:
; \\\\\\\ call collision solver ////////

; //////// TEST A B \\\\\\\
; if A / B are pressed
;	ld hl, global_.isaac.tears
;	bit $7,(hl); flag A set
;	jr z,@Aset
;	ld a,$10
;	ld (global_.isaac.x),a
;	ld (global_.isaac.y),a
;@Aset:
;
;	bit $6,(hl); flag B set
;	jr z,@Bset
;	ld a,$90
;	ld (global_.isaac.x),a
;	ld (global_.isaac.y),a
;@Bset:
; \\\\\\\ TEST A B ////////
