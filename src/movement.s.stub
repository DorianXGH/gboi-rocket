move_stub:
; //////// MOVE ISAAC \\\\\\\
	ld a,(global_.isaac.speed)
	and %00001111
	bit $3,a
	jp z,@dx_pos
	or %11110000
@dx_pos:
	ld hl,global_.isaac.y
	add (hl)
	ld (hl),a

	ld a, 0
	ld b, a

	ld a, (global_.isaac.x)
	ld (collision_.p.1.x), a
	ld a, (global_.isaac.y)
	ld (collision_.p.1.y), a
	ld a, 1
	ld (collision_.hitbox1), a

	ld a, (global_.elements.1.x)
	ld (collision_.p.2.x), a
	ld a, (global_.elements.1.y)
	ld (collision_.p.2.y), a
	ld a, (global_.elements.1.sheet)
	ld h, a
	ld a, (global_.elements.1.sheet + 1)
	ld l, a
	ld a, (hl)
	and %00000111
	ld (collision_.hitbox2), a

	call collision
	and a
	jr z, @@noCollision
	ld a, %10000000
	ld b, a
@@noCollision

	ld a,(global_.isaac.speed)
	and %11110000
	swap a
	and %00001111
	bit $3,a
	jp z,@dy_pos
	or %11110000
@dy_pos:
	ld hl,global_.isaac.x
	add (hl)
	ld (hl),a

	ld a, (global_.isaac.x)
	ld (collision_.p.1.x), a
	ld a, (global_.isaac.y)
	ld (collision_.p.1.y), a
	ld a, 1
	ld (collision_.hitbox1), a

	ld a, (global_.elements.1.x)
	ld (collision_.p.2.x), a
	ld a, (global_.elements.1.y)
	ld (collision_.p.2.y), a
	ld a, (global_.elements.1.sheet)
	ld h, a
	ld a, (global_.elements.1.sheet + 1)
	ld l, a
	ld a, (hl)
	and %00000111
	ld (collision_.hitbox2), a

	call collision
	and a
	jr z, @@noCollision
	ld a, b
	or %01000000
	ld b, a
@@noCollision
	call collisionSolverIsaac

; if A / B are pressed
;	ld hl, global_.isaac.tears
;	bit $7,(hl); flag A set
;	jr z,@Aset
;	ld a,$10
;	ld (global_.isaac.x),a
;	ld (global_.isaac.y),a
;@Aset:
;
;	bit $6,(hl); flag B set
;	jr z,@Bset
;	ld a,$90
;	ld (global_.isaac.x),a
;	ld (global_.isaac.y),a
;@Bset:
; \\\\\\\ MOVE ISAAC ////////
